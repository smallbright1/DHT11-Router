###############################################################################
#
# IAR C/C++ Compiler V10.30.1.6000 for 8051               16/Jul/2019  23:26:19
# Copyright 2004-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\Source\ProjectApp.c
#    Command line       =  
#        -f C:\Users\Admin\AppData\Local\Temp\EWB3D.tmp
#        (E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\Source\ProjectApp.c
#        -D xZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D
#        HAL_UART=TRUE -D xLCD_SUPPORTED=DEBUG -D HAL_LCD=FALSE -lC
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\RouterEB\List
#        -lA
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\RouterEB\List
#        --diag_suppress Pe001,Pa010 -o
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\RouterEB\Obj
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 8 -f
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cfg
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DRTR_NWK) -f
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
#        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
#        -DREJOIN_POLL_RATE=440) -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\Source\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\ZMain\TI2530DB\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\hal\include\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\mac\include\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\mt\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\osal\include\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\stack\af\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\zmac\
#        -I
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
#        -Ohz --require_prototypes --no_code_motion)
#    Locale             =  Chinese (Simplified)_CHN.936
#    List file          =  
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\RouterEB\List\ProjectApp.lst
#    Object file        =  
#        E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\CC2530DB\RouterEB\Obj\ProjectApp.r51
#
###############################################################################

E:\GitHub\DHT11-Router\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ProjectApp\Source\ProjectApp.c
      1          #include "OSAL.h"
      2          #include "AF.h"
      3          #include "ZDApp.h"
      4          #include "ZDObject.h"
      5          #include "ZDProfile.h"
      6          #include "string.h"
      7          
      8          #include "ProjectApp.h"
      9          #include "DebugTrace.h"
     10          
     11          #if !defined( WIN32 )
     12            #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1
     13          #endif
     14          
     15          /* HAL */
     16          #include "hal_lcd.h"
     17          #include "hal_led.h"
     18          #include "hal_key.h"
     19          #include "hal_uart.h"
     20          
     21          /* RTOS */
     22          #if defined( IAR_ARMCM3_LM )
     23          #include "RTOS_App.h"
     24          #endif  
     25          
     26          #include "user_uart0.h"
     27          #include "user_printf.h"
     28          #include "user_api.h"
     29          /*********************************************************************
     30           * MACROS
     31           */
     32          
     33          /*********************************************************************
     34           * CONSTANTS
     35           */
     36          
     37          /*********************************************************************
     38           * TYPEDEFS
     39           */
     40          
     41          /*********************************************************************
     42           * GLOBAL VARIABLES
     43           */
     44          #define LAMP_PIN     P0_5  //定义P0.5口为继电器输入端
     45          
     46          static uint8 GetLamp( void );
     47          
     48          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     49          const cId_t ProjectApp_ClusterList[PROJECTAPP_MAX_CLUSTERS] =
   \                     ProjectApp_ClusterList:
   \   000000   0100         DW 1
     50          {
     51            PROJECTAPP_CLUSTERID
     52          };
     53          

   \                                 In  segment XDATA_ROM_C, align 1
     54          const SimpleDescriptionFormat_t ProjectApp_SimpleDesc =
   \                     ProjectApp_SimpleDesc:
   \   000000   0A           DB 10
   \   000001   040F         DW 3844
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   01           DB 1
   \   000007   ....         DW ProjectApp_ClusterList
   \   000009   01           DB 1
   \   00000A   ....         DW ProjectApp_ClusterList
     55          {
     56            PROJECTAPP_ENDPOINT,              //  int Endpoint;
     57            PROJECTAPP_PROFID,                //  uint16 AppProfId[2];
     58            PROJECTAPP_DEVICEID,              //  uint16 AppDeviceId[2];
     59            PROJECTAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
     60            PROJECTAPP_FLAGS,                 //  int   AppFlags:4;
     61            PROJECTAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
     62            (cId_t *)ProjectApp_ClusterList,  //  byte *pAppInClusterList;
     63            PROJECTAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
     64            (cId_t *)ProjectApp_ClusterList   //  byte *pAppInClusterList;
     65          };
     66          
     67          // This is the Endpoint/Interface description.  It is defined here, but
     68          // filled-in in ProjectApp_Init().  Another way to go would be to fill
     69          // in the structure here and make it a "const" (in code space).  The
     70          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     71          endPointDesc_t ProjectApp_epDesc;
   \                     ProjectApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     72          
     73          /*********************************************************************
     74           * EXTERNAL VARIABLES
     75           */
     76          
     77          /*********************************************************************
     78           * EXTERNAL FUNCTIONS
     79           */
     80          
     81          /*********************************************************************
     82           * LOCAL VARIABLES
     83           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     84          byte ProjectApp_TaskID;   // Task ID for internal task/event processing
   \                     ProjectApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     85                                    // This variable will be received when
     86                                    // ProjectApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     87          devStates_t ProjectApp_NwkState;
   \                     ProjectApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     88          
     89          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     90          byte ProjectApp_TransID;  // This is the unique message ID (counter)
   \                     ProjectApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     91          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     92          afAddrType_t ProjectApp_DstAddr;
   \                     ProjectApp_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
     93          
     94          /*********************************************************************
     95           * LOCAL FUNCTIONS
     96           */
     97          
     98          static void ProjectApp_HandleKeys( byte shift, byte keys );
     99          static void ProjectApp_SendTheMessage( void );
    100          static void ProjectApp_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    101          static void ProjectApp_SendBindcast( void );
    102          static void ProjectApp_MessageMSGCB( afIncomingMSGPacket_t *pkt );
    103          #if defined( IAR_ARMCM3_LM )
    104          static void ProjectApp_ProcessRtosMessage( void );
    105          #endif
    106          
    107          /*********************************************************************
    108           * NETWORK LAYER CALLBACKS
    109           */
    110          
    111          /*********************************************************************
    112           * PUBLIC FUNCTIONS
    113           */
    114          
    115          /*********************************************************************
    116           * @fn      ProjectApp_Init
    117           *
    118           * @brief   Initialization function for the Project App Task.
    119           *          This is called during initialization and should contain
    120           *          any application specific initialization (ie. hardware
    121           *          initialization/setup, table initialization, power up
    122           *          notificaiton ... ).
    123           *
    124           * @param   task_id - the ID assigned by OSAL.  This ID should be
    125           *                    used to send messages and set timers.
    126           *
    127           * @return  none
    128           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    129          void ProjectApp_Init( uint8 task_id )
   \                     ProjectApp_Init:
    130          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
    131            ProjectApp_TaskID = task_id;
   \   000006   90....       MOV       DPTR,#ProjectApp_TaskID
   \   000009   F0           MOVX      @DPTR,A
    132            ProjectApp_NwkState = DEV_INIT;
   \   00000A   90....       MOV       DPTR,#ProjectApp_NwkState
   \   00000D   7401         MOV       A,#0x1
   \   00000F   F0           MOVX      @DPTR,A
    133            ProjectApp_TransID = 0;
   \   000010   90....       MOV       DPTR,#ProjectApp_TransID
   \   000013   E4           CLR       A
   \   000014   F0           MOVX      @DPTR,A
    134          
    135            // Device hardware initialization can be added here or in main() (Zmain.c).
    136            // If the hardware is application specific - add it here.
    137            // If the hardware is other parts of the device add it in main().
    138          
    139            ProjectApp_DstAddr.addrMode = (afAddrMode_t)AddrNotPresent;
   \   000015   12....       LCALL     ?Subroutine1 & 0xFFFF
    140            ProjectApp_DstAddr.endPoint = 0;
    141            ProjectApp_DstAddr.addr.shortAddr = 0;
    142          
    143            // Fill out the endpoint description.
    144            ProjectApp_epDesc.endPoint = PROJECTAPP_ENDPOINT;
   \                     ??CrossCallReturnLabel_2:
   \   000018   90....       MOV       DPTR,#ProjectApp_epDesc
   \   00001B   740A         MOV       A,#0xa
   \   00001D   F0           MOVX      @DPTR,A
    145            ProjectApp_epDesc.task_id = &ProjectApp_TaskID;
   \   00001E   A3           INC       DPTR
   \   00001F   74..         MOV       A,#ProjectApp_TaskID & 0xff
   \   000021   F0           MOVX      @DPTR,A
   \   000022   A3           INC       DPTR
   \   000023   74..         MOV       A,#(ProjectApp_TaskID >> 8) & 0xff
   \   000025   F0           MOVX      @DPTR,A
    146            ProjectApp_epDesc.simpleDesc
    147                      = (SimpleDescriptionFormat_t *)&ProjectApp_SimpleDesc;
   \   000026   A3           INC       DPTR
   \   000027   74..         MOV       A,#ProjectApp_SimpleDesc & 0xff
   \   000029   F0           MOVX      @DPTR,A
   \   00002A   A3           INC       DPTR
   \   00002B   74..         MOV       A,#(ProjectApp_SimpleDesc >> 8) & 0xff
   \   00002D   F0           MOVX      @DPTR,A
    148            ProjectApp_epDesc.latencyReq = noLatencyReqs;
   \   00002E   A3           INC       DPTR
   \   00002F   E4           CLR       A
   \   000030   F0           MOVX      @DPTR,A
    149          
    150            // Register the endpoint description with the AF
    151            afRegister( &ProjectApp_epDesc );
   \   000031                ; Setup parameters for call to function afRegister
   \   000031   7A..         MOV       R2,#ProjectApp_epDesc & 0xff
   \   000033   7B..         MOV       R3,#(ProjectApp_epDesc >> 8) & 0xff
   \   000035   12....       LCALL     `??afRegister::?relay`; Banked call to: afRegister
    152          
    153            // Register for all key events - This app will handle all key events
    154            RegisterForKeys( ProjectApp_TaskID );
   \   000038                ; Setup parameters for call to function RegisterForKeys
   \   000038   90....       MOV       DPTR,#ProjectApp_TaskID
   \   00003B   E0           MOVX      A,@DPTR
   \   00003C   F9           MOV       R1,A
   \   00003D   12....       LCALL     `??RegisterForKeys::?relay`; Banked call to: RegisterForKeys
    155          
    156            // Update the display
    157          #if defined ( LCD_SUPPORTED )
    158            HalLcdWriteString( "ProjectApp", HAL_LCD_LINE_1 );
    159          #endif
    160          
    161            ZDO_RegisterForZDOMsg( ProjectApp_TaskID, End_Device_Bind_rsp );
   \   000040                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   000040   12....       LCALL     ?Subroutine2 & 0xFFFF
    162            ZDO_RegisterForZDOMsg( ProjectApp_TaskID, Match_Desc_rsp );
   \                     ??CrossCallReturnLabel_6:
   \   000043                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   000043   7A06         MOV       R2,#0x6
   \   000045   12....       LCALL     ??Subroutine4_0 & 0xFFFF
    163          
    164          #if defined( IAR_ARMCM3_LM )
    165            // Register this task with RTOS task initiator
    166            RTOS_RegisterApp( task_id, PROJECTAPP_RTOS_MSG_EVT );
    167          #endif
    168            
    169             USER_Uart0_Init(HAL_UART_BR_115200);
   \                     ??CrossCallReturnLabel_8:
   \   000048                ; Setup parameters for call to function USER_Uart0_Init
   \   000048   7904         MOV       R1,#0x4
   \   00004A   12....       LCALL     `??USER_Uart0_Init::?relay`; Banked call to: USER_Uart0_Init
    170             
    171          ZDO_RegisterForZDOMsg( ProjectApp_TaskID, End_Device_Bind_rsp );
   \   00004D                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00004D   12....       LCALL     ?Subroutine2 & 0xFFFF
    172          }
   \                     ??CrossCallReturnLabel_7:
   \   000050   7F01         MOV       R7,#0x1
   \   000052   02....       LJMP      ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7A20         MOV       R2,#0x20
   \   000002                REQUIRE ??Subroutine4_0
   \   000002                ; // Fall through to label ??Subroutine4_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine4_0:
   \   000000   7B80         MOV       R3,#-0x80
   \   000002   90....       MOV       DPTR,#ProjectApp_TaskID
   \   000005   E0           MOVX      A,@DPTR
   \   000006   F9           MOV       R1,A
   \   000007   12....       LCALL     `??ZDO_RegisterForZDOMsg::?relay`; Banked call to: ZDO_RegisterForZDOMsg
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   90....       MOV       DPTR,#ProjectApp_DstAddr + 8
   \   000003   F0           MOVX      @DPTR,A
   \   000004   A3           INC       DPTR
   \   000005   F0           MOVX      @DPTR,A
   \   000006   90....       MOV       DPTR,#ProjectApp_DstAddr
   \   000009   F0           MOVX      @DPTR,A
   \   00000A   A3           INC       DPTR
   \   00000B   F0           MOVX      @DPTR,A
   \   00000C   22           RET
    173          
    174          /*********************************************************************
    175           * @fn      ProjectApp_ProcessEvent
    176           *
    177           * @brief   Project Application Task event processor.  This function
    178           *          is called to process all events for the task.  Events
    179           *          include timers, messages and any other user defined events.
    180           *
    181           * @param   task_id  - The OSAL assigned task ID.
    182           * @param   events - events to process.  This is a bit map and can
    183           *                   contain more than one event.
    184           *
    185           * @return  none
    186           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    187          uint16 ProjectApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     ProjectApp_ProcessEvent:
    188          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV       A,#-0xc
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 12
   \   000005   74F4         MOV       A,#-0xc
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   EA           MOV       A,R2
   \   00000B   FE           MOV       R6,A
   \   00000C   EB           MOV       A,R3
   \   00000D   FF           MOV       R7,A
    189            afIncomingMSGPacket_t *MSGpkt;
    190            afDataConfirm_t *afDataConfirm;
    191            
    192            // Data Confirmation message fields
    193            byte sentEP;
    194            ZStatus_t sentStatus;
    195            byte sentTransID;       // This should match the value sent
    196            (void)task_id;  // Intentionally unreferenced parameter
    197          
    198            if ( events & SYS_EVENT_MSG )
   \   00000E   5480         ANL       A,#0x80
   \   000010   7003         JNZ       $+5
   \   000012   02....       LJMP      ??ProjectApp_ProcessEvent_0 & 0xFFFF
    199            {
    200              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( ProjectApp_TaskID );
   \   000015                ; Setup parameters for call to function osal_msg_receive
   \   000015   800D         SJMP      ??ProjectApp_ProcessEvent_1
    201              while ( MSGpkt )
    202              {
    203                switch ( MSGpkt->hdr.event )
    204                {
    205                  case ZDO_CB_MSG:
    206                    ProjectApp_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    207                    break;
    208          
    209                  case KEY_CHANGE:
    210                    ProjectApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    211                    break;
    212          
    213                  case AF_DATA_CONFIRM_CMD:
    214                    // This message is received as a confirmation of a data packet sent.
    215                    // The status is of ZStatus_t type [defined in ZComDef.h]
    216                    // The message fields are defined in AF.h
    217                    afDataConfirm = (afDataConfirm_t *)MSGpkt;
    218                    sentEP = afDataConfirm->endpoint;
    219                    sentStatus = afDataConfirm->hdr.status;
    220                    sentTransID = afDataConfirm->transID;
    221                    (void)sentEP;
    222                    (void)sentTransID;
    223          
    224                    // Action taken when confirmation is received.
    225                    if ( sentStatus != ZSuccess )
    226                    {
    227                      // The data wasn't delivered -- Do something
    228                    }
    229                    break;
    230          
    231                  case AF_INCOMING_MSG_CMD:
    232                     ProjectApp_MessageMSGCB( MSGpkt );
    233                    break;
    234                    
    235                  case ZDO_STATE_CHANGE:
    236                     user_state_change((devStates_t)(MSGpkt->hdr.status));
   \                     ??ProjectApp_ProcessEvent_2:
   \   000017                ; Setup parameters for call to function user_state_change
   \   000017   A3           INC       DPTR
   \   000018   E0           MOVX      A,@DPTR
   \   000019   F9           MOV       R1,A
   \   00001A   12....       LCALL     `??user_state_change::?relay`; Banked call to: user_state_change
    237                    break;
    238          
    239                  default:
    240                    break;
    241                }
    242          
    243                // Release the memory
    244                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??ProjectApp_ProcessEvent_3:
   \   00001D                ; Setup parameters for call to function osal_msg_deallocate
   \   00001D   AA..         MOV       R2,?V0
   \   00001F   AB..         MOV       R3,?V1
   \   000021   12....       LCALL     `??osal_msg_deallocate::?relay`; Banked call to: osal_msg_deallocate
    245          
    246                // Next
    247                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( ProjectApp_TaskID );
   \   000024                ; Setup parameters for call to function osal_msg_receive
   \                     ??ProjectApp_ProcessEvent_1:
   \   000024   90....       MOV       DPTR,#ProjectApp_TaskID
   \   000027   E0           MOVX      A,@DPTR
   \   000028   F9           MOV       R1,A
   \   000029   12....       LCALL     `??osal_msg_receive::?relay`; Banked call to: osal_msg_receive
   \   00002C   8A..         MOV       ?V0,R2
   \   00002E   8B..         MOV       ?V1,R3
   \   000030   E5..         MOV       A,?V0
   \   000032   45..         ORL       A,?V1
   \   000034   6070         JZ        ??ProjectApp_ProcessEvent_4
   \   000036   85..82       MOV       DPL,?V0
   \   000039   85..83       MOV       DPH,?V1
   \   00003C   E0           MOVX      A,@DPTR
   \   00003D   24E6         ADD       A,#-0x1a
   \   00003F   605B         JZ        ??ProjectApp_ProcessEvent_5
   \   000041   245A         ADD       A,#0x5a
   \   000043   6043         JZ        ??ProjectApp_ProcessEvent_6
   \   000045   24EF         ADD       A,#-0x11
   \   000047   60CE         JZ        ??ProjectApp_ProcessEvent_2
   \   000049   24FE         ADD       A,#-0x2
   \   00004B   70D0         JNZ       ??ProjectApp_ProcessEvent_3
   \   00004D   E5..         MOV       A,?V0
   \   00004F   240C         ADD       A,#0xc
   \   000051   F582         MOV       DPL,A
   \   000053   E4           CLR       A
   \   000054   35..         ADDC      A,?V1
   \   000056   F583         MOV       DPH,A
   \   000058   E0           MOVX      A,@DPTR
   \   000059   6420         XRL       A,#0x20
   \   00005B   7004         JNZ       ??ProjectApp_ProcessEvent_7
   \   00005D   A3           INC       DPTR
   \   00005E   E0           MOVX      A,@DPTR
   \   00005F   6480         XRL       A,#0x80
   \                     ??ProjectApp_ProcessEvent_7:
   \   000061   70BA         JNZ       ??ProjectApp_ProcessEvent_3
   \   000063   E5..         MOV       A,?V0
   \   000065   2413         ADD       A,#0x13
   \   000067   F582         MOV       DPL,A
   \   000069   E4           CLR       A
   \   00006A   35..         ADDC      A,?V1
   \   00006C   F583         MOV       DPH,A
   \   00006E   E0           MOVX      A,@DPTR
   \   00006F   F8           MOV       R0,A
   \   000070   A3           INC       DPTR
   \   000071   E0           MOVX      A,@DPTR
   \   000072   F583         MOV       DPH,A
   \   000074   8882         MOV       DPL,R0
   \   000076   E0           MOVX      A,@DPTR
   \   000077   7009         JNZ       ??ProjectApp_ProcessEvent_8
   \   000079                ; Setup parameters for call to function printf
   \   000079   7A..         MOV       R2,#`?<Constant "Bind success!\\r\\n">` & 0xff
   \   00007B   7B..         MOV       R3,#(`?<Constant "Bind success!\\r\\n">` >> 8) & 0xff
   \                     ??ProjectApp_ProcessEvent_9:
   \   00007D   12....       LCALL     `??printf::?relay`; Banked call to: printf
   \   000080   809B         SJMP      ??ProjectApp_ProcessEvent_3
   \                     ??ProjectApp_ProcessEvent_8:
   \   000082                ; Setup parameters for call to function printf
   \   000082   7A..         MOV       R2,#`?<Constant "Bind failure!\\r\\n">` & 0xff
   \   000084   7B..         MOV       R3,#(`?<Constant "Bind failure!\\r\\n">` >> 8) & 0xff
   \   000086   80F5         SJMP      ??ProjectApp_ProcessEvent_9
   \                     ??ProjectApp_ProcessEvent_6:
   \   000088                ; Setup parameters for call to function ProjectApp_HandleKeys
   \   000088   A3           INC       DPTR
   \   000089   A3           INC       DPTR
   \   00008A   A3           INC       DPTR
   \   00008B   E0           MOVX      A,@DPTR
   \   00008C   FA           MOV       R2,A
   \   00008D   85..82       MOV       DPL,?V0
   \   000090   85..83       MOV       DPH,?V1
   \   000093   A3           INC       DPTR
   \   000094   A3           INC       DPTR
   \   000095   E0           MOVX      A,@DPTR
   \   000096   F9           MOV       R1,A
   \   000097   12....       LCALL     `??ProjectApp_HandleKeys::?relay`; Banked call to: ProjectApp_HandleKeys
   \   00009A   8081         SJMP      ??ProjectApp_ProcessEvent_3
   \                     ??ProjectApp_ProcessEvent_5:
   \   00009C                ; Setup parameters for call to function ProjectApp_MessageMSGCB
   \   00009C   AA..         MOV       R2,?V0
   \   00009E   AB..         MOV       R3,?V1
   \   0000A0   12....       LCALL     `??ProjectApp_MessageMSGCB::?relay`; Banked call to: ProjectApp_MessageMSGCB
   \   0000A3   02....       LJMP      ??ProjectApp_ProcessEvent_3 & 0xFFFF
    248              }
    249          
    250              // return unprocessed events
    251              return (events ^ SYS_EVENT_MSG);
   \                     ??ProjectApp_ProcessEvent_4:
   \   0000A6   EE           MOV       A,R6
   \   0000A7   FA           MOV       R2,A
   \   0000A8   EF           MOV       A,R7
   \   0000A9   6480         XRL       A,#0x80
   \   0000AB   806C         SJMP      ??ProjectApp_ProcessEvent_10
    252            }
    253          
    254            // Send a message out - This event is generated by a timer
    255            //  (setup in ProjectApp_Init()).
    256            if ( events & PROJECTAPP_SEND_MSG_EVT )
   \                     ??ProjectApp_ProcessEvent_0:
   \   0000AD   EA           MOV       A,R2
   \   0000AE   A2E0         MOV       C,0xE0 /* A   */.0
   \   0000B0   506A         JNC       ??ProjectApp_ProcessEvent_11
    257            {
    258              // Send "the" message
    259              ProjectApp_SendTheMessage();
   \   0000B2   90....       MOV       DPTR,#`?<Constant "Hello World">`
   \   0000B5   AC..         MOV       R4,?XSP + 0
   \   0000B7   AD..         MOV       R5,?XSP + 1
   \   0000B9   740C         MOV       A,#0xc
   \   0000BB   12....       LCALL     ?MOVE_LONG8_XDATA_XDATA
   \   0000BE                ; Setup parameters for call to function osal_strlen
   \   0000BE   AA..         MOV       R2,?XSP + 0
   \   0000C0   AB..         MOV       R3,?XSP + 1
   \   0000C2   12....       LCALL     ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   0000C5   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   0000C8   75....       MOV       ?V0,#ProjectApp_TransID & 0xff
   \   0000CB   75....       MOV       ?V1,#(ProjectApp_TransID >> 8) & 0xff
   \   0000CE   78..         MOV       R0,#?V0
   \   0000D0   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000D3   7403         MOV       A,#0x3
   \   0000D5   12....       LCALL     ?XSTACK_DISP100_8
   \   0000D8   88..         MOV       ?V0,R0
   \   0000DA   89..         MOV       ?V1,R1
   \   0000DC   78..         MOV       R0,#?V0
   \   0000DE   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000E1   12....       LCALL     ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   0000E4   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000E7   75..01       MOV       ?V0,#0x1
   \   0000EA   75..00       MOV       ?V1,#0x0
   \   0000ED   78..         MOV       R0,#?V0
   \   0000EF   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000F2   7920         MOV       R1,#0x20
   \   0000F4   7C..         MOV       R4,#ProjectApp_epDesc & 0xff
   \   0000F6   7D..         MOV       R5,#(ProjectApp_epDesc >> 8) & 0xff
   \   0000F8   7A..         MOV       R2,#ProjectApp_DstAddr & 0xff
   \   0000FA   7B..         MOV       R3,#(ProjectApp_DstAddr >> 8) & 0xff
   \   0000FC   12....       LCALL     `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
   \   0000FF   7409         MOV       A,#0x9
   \   000101   12....       LCALL     ?DEALLOC_XSTACK8
    260          
    261              // Setup to send message again
    262              osal_start_timerEx( ProjectApp_TaskID,
    263                                  PROJECTAPP_SEND_MSG_EVT,
    264                                  PROJECTAPP_SEND_MSG_TIMEOUT );
   \   000104                ; Setup parameters for call to function osal_start_timerEx
   \   000104   7C88         MOV       R4,#-0x78
   \   000106   7D13         MOV       R5,#0x13
   \   000108   7A01         MOV       R2,#0x1
   \   00010A   7B00         MOV       R3,#0x0
   \   00010C   90....       MOV       DPTR,#ProjectApp_TaskID
   \   00010F   E0           MOVX      A,@DPTR
   \   000110   F9           MOV       R1,A
   \   000111   12....       LCALL     `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
    265          
    266              // return unprocessed events
    267              return (events ^ PROJECTAPP_SEND_MSG_EVT);
   \   000114   EE           MOV       A,R6
   \   000115   6401         XRL       A,#0x1
   \   000117   FA           MOV       R2,A
   \   000118   EF           MOV       A,R7
   \                     ??ProjectApp_ProcessEvent_10:
   \   000119   FB           MOV       R3,A
   \   00011A   8004         SJMP      ??ProjectApp_ProcessEvent_12
    268            }
    269          
    270            
    271          #if defined( IAR_ARMCM3_LM )
    272            // Receive a message from the RTOS queue
    273            if ( events & PROJECTAPP_RTOS_MSG_EVT )
    274            {
    275              // Process message from RTOS queue
    276              ProjectApp_ProcessRtosMessage();
    277          
    278              // return unprocessed events
    279              return (events ^ PROJECTAPP_RTOS_MSG_EVT);
    280            }
    281          #endif
    282          
    283            // Discard unknown events
    284            return 0;
   \                     ??ProjectApp_ProcessEvent_11:
   \   00011C   7A00         MOV       R2,#0x0
   \   00011E   7B00         MOV       R3,#0x0
   \                     ??ProjectApp_ProcessEvent_12:
   \   000120   740C         MOV       A,#0xc
   \   000122   12....       LCALL     ?DEALLOC_XSTACK8
   \   000125   7F04         MOV       R7,#0x4
   \   000127   02....       LJMP      ?BANKED_LEAVE_XDATA
    285          }
    286          
    287          
    288          /*********************************************************************
    289           * @fn      ProjectApp_HandleKeys
    290           *
    291           * @brief   Handles all key events for this device.
    292           *
    293           * @param   shift - true if in shift/alt.
    294           * @param   keys - bit field for key events. Valid entries:
    295           *                 HAL_KEY_SW_4
    296           *                 HAL_KEY_SW_3
    297           *                 HAL_KEY_SW_2
    298           *                 HAL_KEY_SW_1
    299           *
    300           * @return  none
    301           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    302          static void ProjectApp_HandleKeys( uint8 shift, uint8 keys )
   \                     ProjectApp_HandleKeys:
    303          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000   74F5         MOV       A,#-0xb
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 21
   \   000005   74EB         MOV       A,#-0x15
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   EA           MOV       A,R2
   \   00000B   FE           MOV       R6,A
    304            zAddrType_t dstAddr;
    305          
    306            // Shift is used to make each button/switch dual purpose.
    307            if ( shift )
   \   00000C   E9           MOV       A,R1
   \   00000D   705C         JNZ       ??ProjectApp_HandleKeys_0
    308            {
    309              if ( keys & HAL_KEY_SW_1 )
    310              {
    311              }
    312              if ( keys & HAL_KEY_SW_2 )
    313              {
    314              }
    315              if ( keys & HAL_KEY_SW_3 )
    316              {
    317              }
    318              if ( keys & HAL_KEY_SW_4 )
    319              {
    320              }
    321            }
    322            else
    323            {
    324              if ( keys & HAL_KEY_SW_1 )
   \   00000F   EA           MOV       A,R2
   \   000010   A2E0         MOV       C,0xE0 /* A   */.0
   \   000012   5057         JNC       ??ProjectApp_HandleKeys_0
    325              {
    326              ProjectApp_SendBindcast();
   \   000014   90....       MOV       DPTR,#`?<Constant "Bind data\\r\\n">`
   \   000017   7409         MOV       A,#0x9
   \   000019   12....       LCALL     ?XSTACK_DISP102_8
   \   00001C   740C         MOV       A,#0xc
   \   00001E   12....       LCALL     ?MOVE_LONG8_XDATA_XDATA
   \   000021   12....       LCALL     ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   000024                ; Setup parameters for call to function osal_strlen
   \   000024   7409         MOV       A,#0x9
   \   000026   12....       LCALL     ?XSTACK_DISP101_8
   \   000029   12....       LCALL     ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   00002C   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   00002F   75....       MOV       ?V0,#ProjectApp_TransID & 0xff
   \   000032   75....       MOV       ?V1,#(ProjectApp_TransID >> 8) & 0xff
   \   000035   78..         MOV       R0,#?V0
   \   000037   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00003A   740C         MOV       A,#0xc
   \   00003C   12....       LCALL     ?XSTACK_DISP100_8
   \   00003F   88..         MOV       ?V0,R0
   \   000041   89..         MOV       ?V1,R1
   \   000043   78..         MOV       R0,#?V0
   \   000045   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000048   12....       LCALL     ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   00004B   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00004E   75..01       MOV       ?V0,#0x1
   \   000051   75..00       MOV       ?V1,#0x0
   \   000054   78..         MOV       R0,#?V0
   \   000056   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000059   7920         MOV       R1,#0x20
   \   00005B   7C..         MOV       R4,#ProjectApp_epDesc & 0xff
   \   00005D   7D..         MOV       R5,#(ProjectApp_epDesc >> 8) & 0xff
   \   00005F   7A..         MOV       R2,#ProjectApp_DstAddr & 0xff
   \   000061   7B..         MOV       R3,#(ProjectApp_DstAddr >> 8) & 0xff
   \   000063   12....       LCALL     `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
   \   000066   7409         MOV       A,#0x9
   \   000068   12....       LCALL     ?DEALLOC_XSTACK8
    327              }
    328          
    329          #if defined( SWITCH1_BIND )
    330                // we can use SW1 to simulate SW2 for devices that only have one switch,
    331                keys |= HAL_KEY_SW_2;
    332          #elif defined( SWITCH1_MATCH )
    333                // or use SW1 to simulate SW4 for devices that only have one switch
    334                keys |= HAL_KEY_SW_4;
    335          #endif
    336              }
    337          
    338              if ( keys & HAL_KEY_SW_2 )
   \                     ??ProjectApp_HandleKeys_0:
   \   00006B   EE           MOV       A,R6
   \   00006C   A2E1         MOV       C,0xE0 /* A   */.1
   \   00006E   5069         JNC       ??ProjectApp_HandleKeys_1
    339              {
    340                HalLedSet ( HAL_LED_4, HAL_LED_MODE_OFF );
   \   000070                ; Setup parameters for call to function HalLedSet
   \   000070   7A00         MOV       R2,#0x0
   \   000072   7908         MOV       R1,#0x8
   \   000074   12....       LCALL     `??HalLedSet::?relay`; Banked call to: HalLedSet
    341          
    342                // Initiate an End Device Bind Request for the mandatory endpoint
    343                dstAddr.addrMode = Addr16Bit;
   \   000077   7408         MOV       A,#0x8
   \   000079   12....       LCALL     ?XSTACK_DISP0_8
   \   00007C   7402         MOV       A,#0x2
   \   00007E   F0           MOVX      @DPTR,A
    344                dstAddr.addr.shortAddr = 0x0000; // Coordinator
   \   00007F   85..82       MOV       DPL,?XSP + 0
   \   000082   85..83       MOV       DPH,?XSP + 1
   \   000085   E4           CLR       A
   \   000086   F0           MOVX      @DPTR,A
   \   000087   A3           INC       DPTR
   \   000088   F0           MOVX      @DPTR,A
    345                ZDP_EndDeviceBindReq( &dstAddr, NLME_GetShortAddr(),
    346                                      ProjectApp_epDesc.endPoint,
    347                                      PROJECTAPP_PROFID,
    348                                      PROJECTAPP_MAX_CLUSTERS, (cId_t *)ProjectApp_ClusterList,
    349                                      PROJECTAPP_MAX_CLUSTERS, (cId_t *)ProjectApp_ClusterList,
    350                                      FALSE );
   \   000089                ; Setup parameters for call to function NLME_GetShortAddr
   \   000089   12....       LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
   \   00008C   8A..         MOV       ?V0,R2
   \   00008E   8B..         MOV       ?V1,R3
   \   000090   AC..         MOV       R4,?V0
   \   000092   AD..         MOV       R5,?V1
   \   000094   75....       MOV       ?V0,#ProjectApp_ClusterList & 0xff
   \   000097   75....       MOV       ?V1,#(ProjectApp_ClusterList >> 8) & 0xff
   \   00009A                ; Setup parameters for call to function ZDP_EndDeviceBindReq
   \   00009A   75..00       MOV       ?V2,#0x0
   \   00009D   78..         MOV       R0,#?V2
   \   00009F   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   0000A2   78..         MOV       R0,#?V0
   \   0000A4   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000A7   75..01       MOV       ?V2,#0x1
   \   0000AA   78..         MOV       R0,#?V2
   \   0000AC   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   0000AF   78..         MOV       R0,#?V0
   \   0000B1   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000B4   75..01       MOV       ?V0,#0x1
   \   0000B7   78..         MOV       R0,#?V0
   \   0000B9   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   0000BC   75..04       MOV       ?V0,#0x4
   \   0000BF   75..0F       MOV       ?V1,#0xf
   \   0000C2   78..         MOV       R0,#?V0
   \   0000C4   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000C7   90....       MOV       DPTR,#ProjectApp_epDesc
   \   0000CA   E0           MOVX      A,@DPTR
   \   0000CB   F9           MOV       R1,A
   \   0000CC   7409         MOV       A,#0x9
   \   0000CE   12....       LCALL     ?XSTACK_DISP101_8
   \   0000D1   12....       LCALL     `??ZDP_EndDeviceBindReq::?relay`; Banked call to: ZDP_EndDeviceBindReq
   \   0000D4   7409         MOV       A,#0x9
   \   0000D6   12....       LCALL     ?DEALLOC_XSTACK8
    351              }
    352          
    353              if ( keys & HAL_KEY_SW_3 )
    354              {
    355              }
    356          
    357              if ( keys & HAL_KEY_SW_4 )
   \                     ??ProjectApp_HandleKeys_1:
   \   0000D9   EE           MOV       A,R6
   \   0000DA   A2E3         MOV       C,0xE0 /* A   */.3
   \   0000DC   5058         JNC       ??ProjectApp_HandleKeys_2
    358              {
    359                HalLedSet ( HAL_LED_4, HAL_LED_MODE_OFF );
   \   0000DE                ; Setup parameters for call to function HalLedSet
   \   0000DE   7A00         MOV       R2,#0x0
   \   0000E0   7908         MOV       R1,#0x8
   \   0000E2   12....       LCALL     `??HalLedSet::?relay`; Banked call to: HalLedSet
    360                // Initiate a Match Description Request (Service Discovery)
    361                dstAddr.addrMode = AddrBroadcast;
   \   0000E5   7408         MOV       A,#0x8
   \   0000E7   12....       LCALL     ?XSTACK_DISP0_8
   \   0000EA   740F         MOV       A,#0xf
   \   0000EC   F0           MOVX      @DPTR,A
    362                dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR;
   \   0000ED   85..82       MOV       DPL,?XSP + 0
   \   0000F0   85..83       MOV       DPH,?XSP + 1
   \   0000F3   74FF         MOV       A,#-0x1
   \   0000F5   F0           MOVX      @DPTR,A
   \   0000F6   A3           INC       DPTR
   \   0000F7   F0           MOVX      @DPTR,A
    363                ZDP_MatchDescReq( &dstAddr, NWK_BROADCAST_SHORTADDR,
    364                                  PROJECTAPP_PROFID,
    365                                  PROJECTAPP_MAX_CLUSTERS, (cId_t *)ProjectApp_ClusterList,
    366                                  PROJECTAPP_MAX_CLUSTERS, (cId_t *)ProjectApp_ClusterList,
    367                                  FALSE );
   \   0000F8   75....       MOV       ?V0,#ProjectApp_ClusterList & 0xff
   \   0000FB   75....       MOV       ?V1,#(ProjectApp_ClusterList >> 8) & 0xff
   \   0000FE                ; Setup parameters for call to function ZDP_MatchDescReq
   \   0000FE   75..00       MOV       ?V2,#0x0
   \   000101   78..         MOV       R0,#?V2
   \   000103   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   000106   78..         MOV       R0,#?V0
   \   000108   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00010B   75..01       MOV       ?V2,#0x1
   \   00010E   78..         MOV       R0,#?V2
   \   000110   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   000113   78..         MOV       R0,#?V0
   \   000115   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000118   75..04       MOV       ?V0,#0x4
   \   00011B   75..0F       MOV       ?V1,#0xf
   \   00011E   78..         MOV       R0,#?V0
   \   000120   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000123   7901         MOV       R1,#0x1
   \   000125   7CFF         MOV       R4,#-0x1
   \   000127   7DFF         MOV       R5,#-0x1
   \   000129   7408         MOV       A,#0x8
   \   00012B   12....       LCALL     ?XSTACK_DISP101_8
   \   00012E   12....       LCALL     `??ZDP_MatchDescReq::?relay`; Banked call to: ZDP_MatchDescReq
   \   000131   7408         MOV       A,#0x8
   \   000133   12....       LCALL     ?DEALLOC_XSTACK8
    368              }
    369            }
   \                     ??ProjectApp_HandleKeys_2:
   \   000136   7415         MOV       A,#0x15
   \   000138   12....       LCALL     ?DEALLOC_XSTACK8
   \   00013B   7F03         MOV       R7,#0x3
   \   00013D   02....       LJMP      ?BANKED_LEAVE_XDATA
    370          
    371          
    372          static void ProjectApp_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )//每次“绑定”状态发生改变，均会调用此函数
    373          {
    374            switch ( inMsg->clusterID )
    375            {
    376              case End_Device_Bind_rsp:
    377                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
    378                {
    379                  printf("Bind success!\r\n");
    380                }
    381                else
    382                {
    383                  printf("Bind failure!\r\n");
    384                }
    385                break;
    386            }
    387          }
    388          
    389          static void ProjectApp_SendBindcast( void )
    390          {
    391            char theMessageData[ ] = "Bind data\r\n";
    392           
    393            ProjectApp_DstAddr.addrMode       = (afAddrMode_t)AddrNotPresent;
    394            ProjectApp_DstAddr.endPoint       = 0;
    395            ProjectApp_DstAddr.addr.shortAddr = 0;
    396           
    397            AF_DataRequest( &ProjectApp_DstAddr,
    398                            &ProjectApp_epDesc,
    399                            PROJECTAPP_CLUSTERID,
    400                            (byte)osal_strlen( theMessageData ) + 1,
    401                            (byte *)&theMessageData,
    402                            &ProjectApp_TransID,
    403                            AF_DISCV_ROUTE,
    404                            AF_DEFAULT_RADIUS
    405                          );
    406          }
    407          
    408          
    409          uint8 GetLamp( void )
    410          {
    411            uint8 ret;
    412            
    413            if(LAMP_PIN == 0)
    414            {
    415              ret = 0;
    416            }
    417            else
    418            {
    419              ret = 1;
    420            }
    421            
    422            return ret;
    423          }
    424          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    425          static void ProjectApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     ProjectApp_MessageMSGCB:
    426          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000   74F2         MOV       A,#-0xe
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 3
   \   000005   74FD         MOV       A,#-0x3
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   EA           MOV       A,R2
   \   00000B   FE           MOV       R6,A
   \   00000C   EB           MOV       A,R3
   \   00000D   FF           MOV       R7,A
    427            uint8 jidianqi;
    428            jidianqi = GetLamp(); //jidianqid的状态 1为高电平 0 为低电平 低电平触发（0开 1关）
   \   00000E   E580         MOV       A,0x80
    429            switch ( pkt->clusterId )
   \   000010   8A82         MOV       DPL,R2
   \   000012   8B83         MOV       DPH,R3
   \   000014   A3           INC       DPTR
   \   000015   A3           INC       DPTR
   \   000016   A3           INC       DPTR
   \   000017   A3           INC       DPTR
   \   000018   E0           MOVX      A,@DPTR
   \   000019   6401         XRL       A,#0x1
   \   00001B   7002         JNZ       ??ProjectApp_MessageMSGCB_0
   \   00001D   A3           INC       DPTR
   \   00001E   E0           MOVX      A,@DPTR
   \                     ??ProjectApp_MessageMSGCB_0:
   \   00001F   705E         JNZ       ??ProjectApp_MessageMSGCB_1
    430            {
    431               unsigned char buffer[3];
    432              case PROJECTAPP_CLUSTERID:
    433                osal_memcpy(buffer,pkt->cmd.Data,2);//将接收到的数据复制到buffer区
   \   000021   EA           MOV       A,R2
   \   000022   2422         ADD       A,#0x22
   \   000024   F5..         MOV       ?V4,A
   \   000026   E4           CLR       A
   \   000027   3F           ADDC      A,R7
   \   000028   F5..         MOV       ?V5,A
   \   00002A                ; Setup parameters for call to function osal_memcpy
   \   00002A   85..82       MOV       DPL,?V4
   \   00002D   F583         MOV       DPH,A
   \   00002F   E0           MOVX      A,@DPTR
   \   000030   F5..         MOV       ?V0,A
   \   000032   A3           INC       DPTR
   \   000033   E0           MOVX      A,@DPTR
   \   000034   F5..         MOV       ?V1,A
   \   000036   75..00       MOV       ?V2,#0x0
   \   000039   78..         MOV       R0,#?V0
   \   00003B   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   00003E   7C02         MOV       R4,#0x2
   \   000040   7D00         MOV       R5,#0x0
   \   000042   7403         MOV       A,#0x3
   \   000044   12....       LCALL     ?XSTACK_DISP101_8
   \   000047   12....       LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
   \   00004A   7403         MOV       A,#0x3
   \   00004C   12....       LCALL     ?DEALLOC_XSTACK8
    434                HalUARTWrite(0, pkt->cmd.Data, pkt->cmd.DataLength); //输出接收到的数据
   \   00004F                ; Setup parameters for call to function HalUARTWrite
   \   00004F   EE           MOV       A,R6
   \   000050   2420         ADD       A,#0x20
   \   000052   F582         MOV       DPL,A
   \   000054   E4           CLR       A
   \   000055   3F           ADDC      A,R7
   \   000056   F583         MOV       DPH,A
   \   000058   E0           MOVX      A,@DPTR
   \   000059   FC           MOV       R4,A
   \   00005A   A3           INC       DPTR
   \   00005B   E0           MOVX      A,@DPTR
   \   00005C   FD           MOV       R5,A
   \   00005D   85..82       MOV       DPL,?V4
   \   000060   85..83       MOV       DPH,?V5
   \   000063   E0           MOVX      A,@DPTR
   \   000064   FA           MOV       R2,A
   \   000065   A3           INC       DPTR
   \   000066   E0           MOVX      A,@DPTR
   \   000067   FB           MOV       R3,A
   \   000068   7900         MOV       R1,#0x0
   \   00006A   12....       LCALL     `??HalUARTWrite::?relay`; Banked call to: HalUARTWrite
    435                if(buffer[0] <= 3)
   \   00006D   85..82       MOV       DPL,?XSP + 0
   \   000070   85..83       MOV       DPH,?XSP + 1
   \   000073   E0           MOVX      A,@DPTR
   \   000074   C3           CLR       C
   \   000075   9404         SUBB      A,#0x4
   \   000077   4004         JC        ??ProjectApp_MessageMSGCB_2
    436                {
    437                  P0_5=1;
    438                }
    439                else if((buffer[0] <= 3) && jidianqi==0)
    440                {
    441                  
    442                }
    443                else if(buffer[0] > 3 )
    444                {
    445                  P0_5=0;
    446                }
    447                else if((buffer[0] > 3) && jidianqi==1)
    448                {
    449                  
    450                }
    451                else if((strstr((const char *)UART0_RX_BUFF,"turn on fan"))&&jidianqi==1)
    452                {
    453                  P0_5=0;
   \   000079   C285         CLR       0x80.5
   \   00007B   8002         SJMP      ??ProjectApp_MessageMSGCB_1
    454                }
    455                else if((strstr((const char*)UART0_RX_BUFF,"turn off fan"))&&jidianqi==0)
    456                {
    457                  P0_5=1;
   \                     ??ProjectApp_MessageMSGCB_2:
   \   00007D   D285         SETB      0x80.5
    458                }
    459                break;
    460            }
    461          }
   \                     ??ProjectApp_MessageMSGCB_1:
   \   00007F   7403         MOV       A,#0x3
   \   000081   12....       LCALL     ?DEALLOC_XSTACK8
   \   000084   7F06         MOV       R7,#0x6
   \   000086   02....       LJMP      ?BANKED_LEAVE_XDATA
   \   000089                REQUIRE _A_P0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL     `??osal_strlen::?relay`; Banked call to: osal_strlen
   \   000003                ; Setup parameters for call to function AF_DataRequest
   \   000003                ; Setup parameters for call to function AF_DataRequest
   \   000003   75..1E       MOV       ?V0,#0x1e
   \   000006   78..         MOV       R0,#?V0
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   EA           MOV       A,R2
   \   000001   2401         ADD       A,#0x1
   \   000003   F5..         MOV       ?V0,A
   \   000005   E4           CLR       A
   \   000006   3400         ADDC      A,#0x0
   \   000008   F5..         MOV       ?V1,A
   \   00000A   78..         MOV       R0,#?V0
   \   00000C   22           RET

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Bind success!\\r\\n">`:
   \   000000   42696E64     DB "Bind success!\015\012"
   \            20737563
   \            63657373
   \            210D0A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Bind failure!\\r\\n">`:
   \   000000   42696E64     DB "Bind failure!\015\012"
   \            20666169
   \            6C757265
   \            210D0A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Bind data\\r\\n">`:
   \   000000   42696E64     DB "Bind data\015\012"
   \            20646174
   \            610D0A00

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   7475726E     DB "turn on fan"
   \            206F6E20
   \            66616E00

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   7475726E     DB "turn off fan"
   \            206F6666
   \            2066616E
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hello World">`:
   \   000000   48656C6C     DB "Hello World"
   \            6F20576F
   \            726C6400
    462          
    463          /*********************************************************************
    464           * @fn      ProjectApp_SendTheMessage
    465           *
    466           * @brief   Send "the" message.
    467           *
    468           * @param   none
    469           *
    470           * @return  none
    471           */
    472          static void ProjectApp_SendTheMessage( void )
    473          {
    474            char theMessageData[] = "Hello World";
    475          
    476            if ( AF_DataRequest( &ProjectApp_DstAddr, &ProjectApp_epDesc,
    477                                 PROJECTAPP_CLUSTERID,
    478                                 (byte)osal_strlen( theMessageData ) + 1,
    479                                 (byte *)&theMessageData,
    480                                 &ProjectApp_TransID,
    481                                 AF_DISCV_ROUTE, AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
    482            {
    483              // Successfully requested to be sent.
    484            }
    485            else
    486            {
    487              // Error occurred in request to send.
    488            }
    489          }
    490          
    491          #if defined( IAR_ARMCM3_LM )
    492          /*********************************************************************
    493           * @fn      ProjectApp_ProcessRtosMessage
    494           *
    495           * @brief   Receive message from RTOS queue, send response back.
    496           *
    497           * @param   none
    498           *
    499           * @return  none
    500           */
    501          static void ProjectApp_ProcessRtosMessage( void )
    502          {
    503            osalQueue_t inMsg;
    504          
    505            if ( osal_queue_receive( OsalQueue, &inMsg, 0 ) == pdPASS )
    506            {
    507              uint8 cmndId = inMsg.cmnd;
    508              uint32 counter = osal_build_uint32( inMsg.cbuf, 4 );
    509          
    510              switch ( cmndId )
    511              {
    512                case CMD_INCR:
    513                  counter += 1;  /* Increment the incoming counter */
    514                                 /* Intentionally fall through next case */
    515          
    516                case CMD_ECHO:
    517                {
    518                  userQueue_t outMsg;
    519          
    520                  outMsg.resp = RSP_CODE | cmndId;  /* Response ID */
    521                  osal_buffer_uint32( outMsg.rbuf, counter );    /* Increment counter */
    522                  osal_queue_send( UserQueue1, &outMsg, 0 );  /* Send back to UserTask */
    523                  break;
    524                }
    525                
    526                default:
    527                  break;  /* Ignore unknown command */    
    528              }
    529            }
    530          }
    531          #endif
    532          
    533          /*********************************************************************
    534           */

   Maximum stack usage in bytes:

   XSTACK Function
   ------ --------
     65   ProjectApp_HandleKeys
       41   -> AF_DataRequest
       32   -> HalLedSet
       32   -> NLME_GetShortAddr
       41   -> ZDP_EndDeviceBindReq
       40   -> ZDP_MatchDescReq
       32   -> osal_strlen
      9   ProjectApp_Init
        9   -> RegisterForKeys
        9   -> USER_Uart0_Init
        9   -> ZDO_RegisterForZDOMsg
        9   -> afRegister
     44   ProjectApp_MessageMSGCB
       17   -> HalUARTWrite
       20   -> osal_memcpy
     33   ProjectApp_ProcessEvent
       33   -> AF_DataRequest
       24   -> ProjectApp_HandleKeys
       24   -> ProjectApp_MessageMSGCB
       24   -> osal_msg_deallocate
       24   -> osal_msg_receive
       24   -> osal_start_timerEx
       24   -> osal_strlen
       24   -> printf
       24   -> user_state_change


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "Bind data\r\n">
      16  ?<Constant "Bind failure!\r\n">
      16  ?<Constant "Bind success!\r\n">
      12  ?<Constant "Hello World">
      13  ?<Constant "turn off fan">
      12  ?<Constant "turn on fan">
      11  ??Subroutine4_0
      13  ?Subroutine0
      13  ?Subroutine1
       2  ?Subroutine2
       9  ?Subroutine3
       2  ProjectApp_ClusterList
      12  ProjectApp_DstAddr
     320  ProjectApp_HandleKeys
      85  ProjectApp_Init
     137  ProjectApp_MessageMSGCB
       1  ProjectApp_NwkState
     298  ProjectApp_ProcessEvent
      12  ProjectApp_SimpleDesc
       1  ProjectApp_TaskID
       1  ProjectApp_TransID
       6  ProjectApp_epDesc
       1  _A_P0
      24  -- Other

 
 888 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   1 byte  in segment SFR_AN
  95 bytes in segment XDATA_ROM_C
  21 bytes in segment XDATA_Z
 
  24 bytes of CODE     memory
  95 bytes of CONST    memory
   0 bytes of DATA     memory (+ 1 byte shared)
 888 bytes of HUGECODE memory
  21 bytes of XDATA    memory

Errors: none
Warnings: none
